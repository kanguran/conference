entity Event {
	name String required
    eventType EventType required
    eventStatus EventStatus required
}

entity EventContext {
    description String required
	eventContextStatus EventContextStatus required
    start Instant required
	end Instant required
}

entity EventRegistration {
    description String
	eventRegistrationStatus EventRegistrationStatus required
}

entity Room {
	name String required
	maxSeats Integer required
}

entity ApplicationUser {
    host Boolean
}

enum EventStatus {
	UNPUBLISHED, PUBLISHED, CANCELLED
}

enum EventRegistrationStatus {
	ACTIVE, CANCELLED
}

enum EventContextStatus {
	AVAILABLE, FULLY_BOOKED, CANCELLED
}

enum EventType {
    CONFERENCE
}

relationship OneToOne {
    EventContext{eventContextRoom} to Room
    ApplicationUser{appUser} to User
    EventRegistration{eventCounterparty} to ApplicationUser
    EventContext{contextHost} to ApplicationUser
    Event{mainHost} to ApplicationUser
}

relationship OneToMany {
	EventContext{eventContextRegistration} to EventRegistration
	Event{eventContext} to EventContext
}

paginate Event, EventContext, Room, EventRegistration with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct
